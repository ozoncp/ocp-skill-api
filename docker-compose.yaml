version: '3.1'

services:
  db:
    image: postgres:13.4
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
  ocp-skills-api:
    build: .
    restart: unless-stopped
    links:
      - db
    ports:
      - "8000:82"
      - "9100:9100"
    depends_on:
      - db
      - kafka
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - 2181:2181
    environment:
      zk_id: "1"
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    depends_on:
      - ocp-skills-api
    links:
      - ocp-skills-api
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - '6831:6831/udp'
      - '16686:16686'